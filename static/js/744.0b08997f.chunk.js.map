{"version":3,"file":"static/js/744.0b08997f.chunk.js","mappings":"qNAGaA,EAAOC,EAAAA,GAAAA,GAAH,sJAEb,IAYSC,EAAOD,EAAAA,GAAAA,GAAH,+M,SCdF,SAASE,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFAL,EAAME,W,0MCJzBI,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGAGfD,IAAAA,IAAA,yEAHe,uBAEfE,EAFe,EAEvBC,KAAQD,QAFe,kBAKlBA,GALkB,2CAAH,qDAQXE,EAAQ,mCAAG,WAAMR,GAAN,yFACCI,IAAAA,IAAA,iBAAoBJ,EAApB,gDADD,uBACdO,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,sDAMRE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBN,IAAAA,IAAA,uEAA0EM,EAA1E,OAHkB,uBAElBJ,EAFkB,EAE1BC,KAAQD,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAS,mCAAG,WAAMX,GAAN,yFACAI,IAAAA,IAAA,iBAAoBJ,EAApB,uEADA,uBACfO,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,sDAMTK,EAAO,mCAAG,WAAMZ,GAAN,yFACEI,IAAAA,IAAA,iBAAoBJ,EAApB,uEADF,uBACbO,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,uD,sHC9BL,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,MAAcY,MAAK,SAAAV,GAAI,OAAIQ,EAAUR,QACpC,KAGD,4BACE,4CACA,SAAC,IAAD,CAAYb,OAAQA","sources":["components/MovieList.styled.jsx","components/MoviesList.js","services/apiService.js","views/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  ${\n    '' /* display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px; */\n  }\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\ntext-decoration: none;\n margin-right: 30px;\n margin-top: 10px;\n  text-align: start;\n  font-size: 16px;\n   font-family:Verdana, Geneva, Tahoma, sans-serif\n  border-radius: 2px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\nimport PropTypes from 'prop-types';\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n}\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// eaf08be10d6768fda7dba31732d6cddc\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc`);\n  return results;\n};\n\nexport const getMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=b2e625c7bfa1b5b54460e1c069c61bdc&query=${query}\n`);\n  return results;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc&language=en-US`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=\neaf08be10d6768fda7dba31732d6cddc&language=en-US`);\n  return data;\n};","import { getTranding } from 'services/apiService';\nimport MoviesList from 'components/MoviesList';\nimport { useEffect, useState } from 'react';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getTranding().then(data => setMovies(data));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Today</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n}"],"names":["List","styled","Item","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","axios","getTranding","results","data","getMovie","getSearchMovie","query","getReview","getCast","HomePage","useState","setMovies","useEffect","then"],"sourceRoot":""}